#!/bin/sh

# This is a general-purpose function to ask Yes/No questions in Bash, either
# with or without a default answer. It keeps repeating the question until it
# gets a valid answer.

ask() {
    # http://djm.me/ask
    while true; do

        if [ "${2:-}" = "Y" ]; then
            prompt="Y/n"
            default=Y
        elif [ "${2:-}" = "N" ]; then
            prompt="y/N"
            default=N
        else
            prompt="y/n"
            default=
        fi

        # Ask the question - use /dev/tty in case stdin is redirected from somewhere else
        read -p "$1 [$prompt] " REPLY </dev/tty

        # Default?
        if [ -z "$REPLY" ]; then
            REPLY=$default
        fi

        # Check if the reply is valid
        case "$REPLY" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac

    done
}

update_node_modules()
{
  npm -g update
}

if ask "Update Node Modules?" Y; then
  update_node_modules
fi

update_atom_packages()
{
  apm update --no-confirm
}

if ask "Update Atom Packages?" Y; then
  update_atom_packages
fi

update_phpbrew()
{
  phpbrew self-update
}

if ask "Update PHPBrew?" Y; then
  update_phpbrew
fi

update_composer_phar()
{
  composer self-update
}

if ask "Update Composer PHAR?" Y; then
  update_composer_phar
fi

update_global_composer_packages()
{
  composer global update
}

if ask "Update Global Composer Packages?" Y; then
  update_global_composer_packages
fi

update_ngrok()
{
  ngrok update
}

if ask "Update ngrok?" Y; then
  update_ngrok
fi

update_wp_cli()
{
  curl https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar > ${HOME}/prefix/bin/wp
}

if ask "Update WP-CLI?" Y; then
  update_wp_cli
fi

update_homebrew()
{
  brew update
}

if ask "Update Homebrew and all formulae from GitHub?" Y; then
  update_homebrew
fi

update_brew_packages()
{
  brew upgrade --cleanup
}

if ask "Update brew packages?" Y; then
  update_brew_packages
fi

update_go_deps()
{
  cat ${HOME}/prefix/go-deps.txt | xargs go get -u
}

if ask "Update Go Dependencies?" Y; then
  update_go_deps
fi

update_docker_images()
{
  mkfifo /tmp/docker-update
  docker images | tail -n+2 | tr -s ' ' | cut -f1,2 -d ' ' | tr ' ' ':' | sort -n > /tmp/docker-update &
  parallel -j4 docker pull < /tmp/docker-update
  rm -f /tmp/docker-update
  for image in $(docker images | awk '{ print $1, $3 }' | grep '<none>' | cut -f2 -d ' ');
  do
      docker rmi $image;
  done
  unset image
}

if ask "Update Docker images?" Y; then
  update_docker_images
fi
